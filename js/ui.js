window.ui = {
  state: 'loading',
  readyToCollect: false,
  nExamples: 0,
  nTrainings: 0,

  setContent: function(key, value) {
    // Set an element's content based on the data-content key.
    $('[data-content="' + key + '"]').html(value);
  },

  showInfo: function(text, dontFlash) {
    // Show info and beep / flash.
    this.setContent('info', text);
    if (!dontFlash) {
      $('#info').addClass('flash');
      new Audio('hint.mp3').play();
      setTimeout(function() {
        $('#info').removeClass('flash');
      }, 1000);
    }
  },

  onWebcamEnabled: function() {
    this.state = 'finding face';
    this.showInfo("–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–∞–π–¥—ë–º —Ç–≤–æ—ë –ª–∏—Ü–æ! ü§®", true);
  },

  onFoundFace: function() {
    if (this.state == 'finding face') {
      this.state = 'collecting';
      this.readyToCollect = true;
      this.showInfo(
        "<h3>–î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º! üôÇ</h3>" +
          '–°–æ–±–∏—Ä–∞–π—Ç–µ —Ç–æ—á–∫–∏ –¥–∞–Ω–Ω—ã—Ö, –ø–µ—Ä–µ–º–µ—â–∞—è –º—ã—à—å –ø–æ —ç–∫—Ä–∞–Ω—É, —Å–ª–µ–¥—è –≥–ª–∞–∑–∞–º–∏ –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º –∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –Ω–∞–∂–∏–º–∞—è –∫–ª–∞–≤–∏—à—É –ø—Ä–æ–±–µ–ª–∞ üëÄ',
        true,
      );
    }
  },

  onAddExample: function(nTrain, nVal) {
    // Call this when an example is added.
    this.nExamples = nTrain + nVal;
    this.setContent('n-train', nTrain);
    this.setContent('n-val', nVal);
    if (nTrain >= 2) {
      $('#start-training').prop('disabled', false);
    }
    if (this.state == 'collecting' && this.nExamples == 5) {
      this.showInfo(
        '<h3>–ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–∞–ª—å—à–µ!</h3>' +
          '–í–∞–º –Ω—É–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 20 —Ç–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.',
      );
    }
    if (this.state == 'collecting' && this.nExamples == 25) {
      this.showInfo(
        '<h3>–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞! üëå</h3>' +
          "–¢–µ–ø–µ—Ä—å, –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤, –¥–∞–≤–∞–π—Ç–µ –æ–±—É—á–∏–º –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å!<br> " +
          '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É!',
      );
    }
    if (this.state == 'trained' && this.nExamples == 50) {
      this.showInfo(
        '<h3>–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ üëè</h3>' +
          "–í—ã —Å–æ–±—Ä–∞–ª–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∏–º–µ—Ä–æ–≤. –î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –µ—â–µ —Ä–∞–∑!",
      );
    }
    if (nTrain > 0 && nVal > 0) {
      $('#store-data').prop('disabled', false);
    }
  },

  onFinishTraining: function() {
    // Call this when training is finished.
    this.nTrainings += 1;
    $('#target').css('opacity', '0.9');
    $('#draw-heatmap').prop('disabled', false);
    $('#reset-model').prop('disabled', false);
    $('#store-model').prop('disabled', false);

    if (this.nTrainings == 1) {
      this.state = 'trained';
      this.showInfo(
        '<h3>–ó–¥–æ—Ä–æ–≤–æ! üòç</h3>' +
          '–ó–µ–ª—ë–Ω—ã–π –∫—Ä—É–∂–æ–∫ –±—É–¥–µ—Ç —Å–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ —Ç–≤–æ–∏–º –≤–∑–≥–ª—è–¥–æ–º<br>' +
          "–Ø –¥—É–º–∞—é, —ç—Ç–æ –≤—Å–µ –µ—â–µ –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ... üòÖ<br>" +
          "–î–∞–≤–∞–π—Ç–µ —Å–æ–±–µ—Ä–µ–º –±–æ–ª—å—à–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∫—É—Ä—Å–æ—Ä–æ–º –º—ã—à–∏ –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª.",
      );
    } else if (this.nTrainings == 2) {
      this.state = 'trained_twice';
      this.showInfo(
        '<h3>–°—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –ª—É—á—à–µ! üöÄ</h3>' +
          '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Å–æ–±–∏—Ä–∞—Ç—å –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å!<br>' +
          '–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å —Ç–µ–ø–ª–æ–≤—É—é –∫–∞—Ä—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∂–µ—Ç –≤–∞–º, ' +
          ' –≥–¥–µ —É –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏ –µ—Å—Ç—å —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã.',
      );
    } else if (this.nTrainings == 3) {
      this.state = 'trained_thrice';
      this.showInfo(
        '–ï—Å–ª–∏ –≤–∞—à–∞ –º–æ–¥–µ–ª—å –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞, –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –µ–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è üëª',
      );
    } else if (this.nTrainings == 4) {
      this.state = 'trained_thrice';
      this.showInfo(
        '<h3>–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å! üôÇ</h3>',
      );
    }
  },
};
